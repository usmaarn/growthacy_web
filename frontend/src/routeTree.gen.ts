/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as DashboardlayoutImport } from './routes/_dashboard_layout'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardlayoutSettingsImport } from './routes/_dashboard_layout/settings'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as DashboardlayoutCampaignsNewImport } from './routes/_dashboard_layout/campaigns/new'
import { Route as DashboardlayoutCampaignsCampaignIdImport } from './routes/_dashboard_layout/campaigns/$campaignId'

// Create Virtual Routes

const PublicIndexLazyImport = createFileRoute('/_public/')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const DashboardlayoutDashboardIndexLazyImport = createFileRoute(
  '/_dashboard_layout/dashboard/',
)()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const DashboardlayoutRoute = DashboardlayoutImport.update({
  id: '/_dashboard_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const DashboardlayoutSettingsRoute = DashboardlayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardlayoutRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardlayoutDashboardIndexLazyRoute =
  DashboardlayoutDashboardIndexLazyImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => DashboardlayoutRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard_layout/dashboard/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardlayoutCampaignsNewRoute =
  DashboardlayoutCampaignsNewImport.update({
    id: '/campaigns/new',
    path: '/campaigns/new',
    getParentRoute: () => DashboardlayoutRoute,
  } as any)

const DashboardlayoutCampaignsCampaignIdRoute =
  DashboardlayoutCampaignsCampaignIdImport.update({
    id: '/campaigns/$campaignId',
    path: '/campaigns/$campaignId',
    getParentRoute: () => DashboardlayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard_layout': {
      id: '/_dashboard_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard_layout/settings': {
      id: '/_dashboard_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardlayoutSettingsImport
      parentRoute: typeof DashboardlayoutImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicImport
    }
    '/_dashboard_layout/campaigns/$campaignId': {
      id: '/_dashboard_layout/campaigns/$campaignId'
      path: '/campaigns/$campaignId'
      fullPath: '/campaigns/$campaignId'
      preLoaderRoute: typeof DashboardlayoutCampaignsCampaignIdImport
      parentRoute: typeof DashboardlayoutImport
    }
    '/_dashboard_layout/campaigns/new': {
      id: '/_dashboard_layout/campaigns/new'
      path: '/campaigns/new'
      fullPath: '/campaigns/new'
      preLoaderRoute: typeof DashboardlayoutCampaignsNewImport
      parentRoute: typeof DashboardlayoutImport
    }
    '/_dashboard_layout/dashboard/': {
      id: '/_dashboard_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardlayoutDashboardIndexLazyImport
      parentRoute: typeof DashboardlayoutImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardlayoutRouteChildren {
  DashboardlayoutSettingsRoute: typeof DashboardlayoutSettingsRoute
  DashboardlayoutCampaignsCampaignIdRoute: typeof DashboardlayoutCampaignsCampaignIdRoute
  DashboardlayoutCampaignsNewRoute: typeof DashboardlayoutCampaignsNewRoute
  DashboardlayoutDashboardIndexLazyRoute: typeof DashboardlayoutDashboardIndexLazyRoute
}

const DashboardlayoutRouteChildren: DashboardlayoutRouteChildren = {
  DashboardlayoutSettingsRoute: DashboardlayoutSettingsRoute,
  DashboardlayoutCampaignsCampaignIdRoute:
    DashboardlayoutCampaignsCampaignIdRoute,
  DashboardlayoutCampaignsNewRoute: DashboardlayoutCampaignsNewRoute,
  DashboardlayoutDashboardIndexLazyRoute:
    DashboardlayoutDashboardIndexLazyRoute,
}

const DashboardlayoutRouteWithChildren = DashboardlayoutRoute._addFileChildren(
  DashboardlayoutRouteChildren,
)

interface PublicRouteChildren {
  PublicIndexLazyRoute: typeof PublicIndexLazyRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexLazyRoute: PublicIndexLazyRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/settings': typeof DashboardlayoutSettingsRoute
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/': typeof PublicIndexLazyRoute
  '/campaigns/$campaignId': typeof DashboardlayoutCampaignsCampaignIdRoute
  '/campaigns/new': typeof DashboardlayoutCampaignsNewRoute
  '/dashboard': typeof DashboardlayoutDashboardIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardlayoutRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/settings': typeof DashboardlayoutSettingsRoute
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/': typeof PublicIndexLazyRoute
  '/campaigns/$campaignId': typeof DashboardlayoutCampaignsCampaignIdRoute
  '/campaigns/new': typeof DashboardlayoutCampaignsNewRoute
  '/dashboard': typeof DashboardlayoutDashboardIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard_layout': typeof DashboardlayoutRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_dashboard_layout/settings': typeof DashboardlayoutSettingsRoute
  '/_auth/login': typeof AuthLoginLazyRoute
  '/_auth/register': typeof AuthRegisterLazyRoute
  '/_public/': typeof PublicIndexLazyRoute
  '/_dashboard_layout/campaigns/$campaignId': typeof DashboardlayoutCampaignsCampaignIdRoute
  '/_dashboard_layout/campaigns/new': typeof DashboardlayoutCampaignsNewRoute
  '/_dashboard_layout/dashboard/': typeof DashboardlayoutDashboardIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
    | '/campaigns/$campaignId'
    | '/campaigns/new'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot-password'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
    | '/campaigns/$campaignId'
    | '/campaigns/new'
    | '/dashboard'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard_layout'
    | '/_public'
    | '/_auth/forgot-password'
    | '/_dashboard_layout/settings'
    | '/_auth/login'
    | '/_auth/register'
    | '/_public/'
    | '/_dashboard_layout/campaigns/$campaignId'
    | '/_dashboard_layout/campaigns/new'
    | '/_dashboard_layout/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashboardlayoutRoute: typeof DashboardlayoutRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashboardlayoutRoute: DashboardlayoutRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dashboard_layout",
        "/_public"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_dashboard_layout": {
      "filePath": "_dashboard_layout.tsx",
      "children": [
        "/_dashboard_layout/settings",
        "/_dashboard_layout/campaigns/$campaignId",
        "/_dashboard_layout/campaigns/new",
        "/_dashboard_layout/dashboard/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_dashboard_layout/settings": {
      "filePath": "_dashboard_layout/settings.tsx",
      "parent": "/_dashboard_layout"
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.lazy.tsx",
      "parent": "/_auth"
    },
    "/_public/": {
      "filePath": "_public/index.lazy.tsx",
      "parent": "/_public"
    },
    "/_dashboard_layout/campaigns/$campaignId": {
      "filePath": "_dashboard_layout/campaigns/$campaignId.tsx",
      "parent": "/_dashboard_layout"
    },
    "/_dashboard_layout/campaigns/new": {
      "filePath": "_dashboard_layout/campaigns/new.tsx",
      "parent": "/_dashboard_layout"
    },
    "/_dashboard_layout/dashboard/": {
      "filePath": "_dashboard_layout/dashboard/index.lazy.tsx",
      "parent": "/_dashboard_layout"
    }
  }
}
ROUTE_MANIFEST_END */
